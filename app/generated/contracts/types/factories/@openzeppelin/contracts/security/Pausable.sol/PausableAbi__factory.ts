/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  PausableAbi,
  PausableAbiInterface,
} from "../../../../../@openzeppelin/contracts/security/Pausable.sol/PausableAbi";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class PausableAbi__factory {
  static readonly abi = _abi;
  static createInterface(): PausableAbiInterface {
    return new Interface(_abi) as PausableAbiInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): PausableAbi {
    return new Contract(address, _abi, runner) as unknown as PausableAbi;
  }
}
